{"ast":null,"code":"// Custom Logging Middleware\n// Stores logs in localStorage under 'appLogs'\n\nconst LOG_KEY = 'appLogs';\nfunction getLogs() {\n  const logs = localStorage.getItem(LOG_KEY);\n  return logs ? JSON.parse(logs) : [];\n}\nfunction saveLog(entry) {\n  const logs = getLogs();\n  logs.push(entry);\n  localStorage.setItem(LOG_KEY, JSON.stringify(logs));\n}\nconst logger = {\n  log: (message, meta = {}) => {\n    saveLog({\n      type: 'log',\n      message,\n      meta,\n      timestamp: new Date().toISOString()\n    });\n  },\n  warn: (message, meta = {}) => {\n    saveLog({\n      type: 'warn',\n      message,\n      meta,\n      timestamp: new Date().toISOString()\n    });\n  },\n  error: (message, meta = {}) => {\n    saveLog({\n      type: 'error',\n      message,\n      meta,\n      timestamp: new Date().toISOString()\n    });\n  },\n  getLogs,\n  clear: () => localStorage.removeItem(LOG_KEY)\n};\nexport default logger;","map":{"version":3,"names":["LOG_KEY","getLogs","logs","localStorage","getItem","JSON","parse","saveLog","entry","push","setItem","stringify","logger","log","message","meta","type","timestamp","Date","toISOString","warn","error","clear","removeItem"],"sources":["D:/22ve1a6759/question1/src/logger.js"],"sourcesContent":["// Custom Logging Middleware\n// Stores logs in localStorage under 'appLogs'\n\nconst LOG_KEY = 'appLogs';\n\nfunction getLogs() {\n  const logs = localStorage.getItem(LOG_KEY);\n  return logs ? JSON.parse(logs) : [];\n}\n\nfunction saveLog(entry) {\n  const logs = getLogs();\n  logs.push(entry);\n  localStorage.setItem(LOG_KEY, JSON.stringify(logs));\n}\n\nconst logger = {\n  log: (message, meta = {}) => {\n    saveLog({ type: 'log', message, meta, timestamp: new Date().toISOString() });\n  },\n  warn: (message, meta = {}) => {\n    saveLog({ type: 'warn', message, meta, timestamp: new Date().toISOString() });\n  },\n  error: (message, meta = {}) => {\n    saveLog({ type: 'error', message, meta, timestamp: new Date().toISOString() });\n  },\n  getLogs,\n  clear: () => localStorage.removeItem(LOG_KEY),\n};\n\nexport default logger; "],"mappings":"AAAA;AACA;;AAEA,MAAMA,OAAO,GAAG,SAAS;AAEzB,SAASC,OAAOA,CAAA,EAAG;EACjB,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAACJ,OAAO,CAAC;EAC1C,OAAOE,IAAI,GAAGG,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,GAAG,EAAE;AACrC;AAEA,SAASK,OAAOA,CAACC,KAAK,EAAE;EACtB,MAAMN,IAAI,GAAGD,OAAO,CAAC,CAAC;EACtBC,IAAI,CAACO,IAAI,CAACD,KAAK,CAAC;EAChBL,YAAY,CAACO,OAAO,CAACV,OAAO,EAAEK,IAAI,CAACM,SAAS,CAACT,IAAI,CAAC,CAAC;AACrD;AAEA,MAAMU,MAAM,GAAG;EACbC,GAAG,EAAEA,CAACC,OAAO,EAAEC,IAAI,GAAG,CAAC,CAAC,KAAK;IAC3BR,OAAO,CAAC;MAAES,IAAI,EAAE,KAAK;MAAEF,OAAO;MAAEC,IAAI;MAAEE,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IAAE,CAAC,CAAC;EAC9E,CAAC;EACDC,IAAI,EAAEA,CAACN,OAAO,EAAEC,IAAI,GAAG,CAAC,CAAC,KAAK;IAC5BR,OAAO,CAAC;MAAES,IAAI,EAAE,MAAM;MAAEF,OAAO;MAAEC,IAAI;MAAEE,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IAAE,CAAC,CAAC;EAC/E,CAAC;EACDE,KAAK,EAAEA,CAACP,OAAO,EAAEC,IAAI,GAAG,CAAC,CAAC,KAAK;IAC7BR,OAAO,CAAC;MAAES,IAAI,EAAE,OAAO;MAAEF,OAAO;MAAEC,IAAI;MAAEE,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IAAE,CAAC,CAAC;EAChF,CAAC;EACDlB,OAAO;EACPqB,KAAK,EAAEA,CAAA,KAAMnB,YAAY,CAACoB,UAAU,CAACvB,OAAO;AAC9C,CAAC;AAED,eAAeY,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}